/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/js/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/js/db/doctorsDB.js":
/*!********************************!*\
  !*** ./src/js/db/doctorsDB.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
const doctorsData = [{
  "name": "Тихонов Лука Русланович",
  "photo": "assets/img/card-doctor-photo-1.png",
  "specialty": "Диетолог",
  "cost": "1200",
  "child": true,
  "listClinic": [{
    "clinic": "Черкизовская",
    "timeJob": [{
      "day": "Пн",
      "time": ["09-30", "10-00", "10-30", "11-00"]
    }, {
      "day": "Вт",
      "time": ["10-00", "10-30", "11-00", "11-30"]
    }, {
      "day": "Ср",
      "time": ["10-30", "11-00", "11-30", "12-00"]
    }, {
      "day": "Чт",
      "time": ["11-00", "11-30", "12-00", "12-30"]
    }]
  }, {
    "clinic": "Преображенская площадь",
    "timeJob": [{
      "day": "Пт",
      "time": ["11-30", "12-00", "12-30", "13-00"]
    }, {
      "day": "Сб",
      "time": ["12-00", "12-30", "13-00", "13-30"]
    }, {
      "day": "Вс",
      "time": ["12-30", "13-00", "13-30", "14-00"]
    }, {
      "day": "Пн",
      "time": ["13-00", "13-30", "14-00", "14-30"]
    }]
  }, {
    "clinic": "Сокольники",
    "timeJob": [{
      "day": "Вт",
      "time": ["13-30", "14-00", "14-30", "15-00"]
    }, {
      "day": "Ср",
      "time": ["14-00", "14-30", "15-00", "15-30"]
    }, {
      "day": "Чт",
      "time": ["14-30", "15-00", "15-30", "16-00"]
    }, {
      "day": "Пт",
      "time": ["15-00", "15-30", "16-00", "16-30"]
    }]
  }]
}, {
  "name": "Мещеряков Ярослав Богданович",
  "photo": "assets/img/card-doctor-photo-2.png",
  "specialty": "Андролог",
  "cost": "1500",
  "child": true,
  "listClinic": [{
    "clinic": "Красносельская",
    "timeJob": [{
      "day": "Сб",
      "time": ["15-30", "16-00", "16-30", "17-00"]
    }, {
      "day": "Вс",
      "time": ["16-00", "16-30", "17-00", "17-30"]
    }, {
      "day": "Пн",
      "time": ["16-30", "17-00", "17-30", "18-00"]
    }, {
      "day": "Вт",
      "time": ["17-00", "17-30", "18-00", "18-30"]
    }]
  }, {
    "clinic": "Комсомольская",
    "timeJob": [{
      "day": "Ср",
      "time": ["17-30", "18-00", "18-30", "19-00"]
    }, {
      "day": "Чт",
      "time": ["18-00", "18-30", "19-00", "19-30"]
    }, {
      "day": "Пт",
      "time": ["18-30", "19-00", "19-30", "20-00"]
    }, {
      "day": "Сб",
      "time": ["19-00", "19-30", "20-00", "20-30"]
    }]
  }, {
    "clinic": "Красные ворота",
    "timeJob": [{
      "day": "Вс",
      "time": ["09-30", "10-00", "10-30", "11-00"]
    }, {
      "day": "Пн",
      "time": ["10-00", "10-30", "11-00", "11-30"]
    }, {
      "day": "Вт",
      "time": ["10-30", "11-00", "11-30", "12-00"]
    }, {
      "day": "Ср",
      "time": ["11-00", "11-30", "12-00", "12-30"]
    }]
  }, {
    "clinic": "Чистые пруды",
    "timeJob": [{
      "day": "Чт",
      "time": ["11-30", "12-00", "12-30", "13-00"]
    }, {
      "day": "Пт",
      "time": ["12-00", "12-30", "13-00", "13-30"]
    }, {
      "day": "Сб",
      "time": ["12-30", "13-00", "13-30", "14-00"]
    }, {
      "day": "Вс",
      "time": ["13-00", "13-30", "14-00", "14-30"]
    }]
  }]
}, {
  "name": "Степанов Андрей Мирославович",
  "photo": "assets/img/card-doctor-photo-3.png",
  "specialty": "Офтальмолг",
  "cost": "2500",
  "child": true,
  "listClinic": [{
    "clinic": "Лубянка",
    "timeJob": [{
      "day": "Пн",
      "time": ["13-30", "14-00", "14-30", "15-00"]
    }, {
      "day": "Вт",
      "time": ["14-00", "14-30", "15-00", "15-30"]
    }, {
      "day": "Ср",
      "time": ["14-30", "15-00", "15-30", "16-00"]
    }, {
      "day": "Чт",
      "time": ["15-00", "15-30", "16-00", "16-30"]
    }]
  }, {
    "clinic": "Марьино",
    "timeJob": [{
      "day": "Пт",
      "time": ["15-30", "16-00", "16-30", "17-00"]
    }, {
      "day": "Сб",
      "time": ["16-00", "16-30", "17-00", "17-30"]
    }, {
      "day": "Вс",
      "time": ["16-30", "17-00", "17-30", "18-00"]
    }, {
      "day": "Пн",
      "time": ["17-00", "17-30", "18-00", "18-30"]
    }]
  }, {
    "clinic": "Перово",
    "timeJob": [{
      "day": "Вт",
      "time": ["17-30", "18-00", "18-30", "19-00"]
    }, {
      "day": "Ср",
      "time": ["18-00", "18-30", "19-00", "19-30"]
    }, {
      "day": "Чт",
      "time": ["18-30", "19-00", "19-30", "20-00"]
    }, {
      "day": "Пт",
      "time": ["19-00", "19-30", "20-00", "20-30"]
    }]
  }, {
    "clinic": "Парк культуры",
    "timeJob": [{
      "day": "Сб",
      "time": ["09-30", "10-00", "10-30", "11-00"]
    }, {
      "day": "Вс",
      "time": ["10-00", "10-30", "11-00", "11-30"]
    }, {
      "day": "Пн",
      "time": ["10-30", "11-00", "11-30", "12-00"]
    }, {
      "day": "Вт",
      "time": ["11-00", "11-30", "12-00", "12-30"]
    }]
  }, {
    "clinic": "Фрунзенская",
    "timeJob": [{
      "day": "Ср",
      "time": ["11-30", "12-00", "12-30", "13-00"]
    }, {
      "day": "Чт",
      "time": ["12-00", "12-30", "13-00", "13-30"]
    }, {
      "day": "Пт",
      "time": ["12-30", "13-00", "13-30", "14-00"]
    }, {
      "day": "Сб",
      "time": ["13-00", "13-30", "14-00", "14-30"]
    }]
  }]
}, {
  "name": "Сидоров Константин Кириллович",
  "photo": "assets/img/card-doctor-photo-4.png",
  "specialty": "УЗИ диагност",
  "cost": "3200",
  "child": false,
  "listClinic": [{
    "clinic": "Черкизовская",
    "timeJob": [{
      "day": "Вс",
      "time": ["13-30", "14-00", "14-30", "15-00"]
    }, {
      "day": "Пн",
      "time": ["14-00", "14-30", "15-00", "15-30"]
    }, {
      "day": "Вт",
      "time": ["14-30", "15-00", "15-30", "16-00"]
    }, {
      "day": "Ср",
      "time": ["15-00", "15-30", "16-00", "16-30"]
    }]
  }, {
    "clinic": "Преображенская площадь",
    "timeJob": [{
      "day": "Чт",
      "time": ["15-30", "16-00", "16-30", "17-00"]
    }, {
      "day": "Пт",
      "time": ["16-00", "16-30", "17-00", "17-30"]
    }, {
      "day": "Сб",
      "time": ["16-30", "17-00", "17-30", "18-00"]
    }, {
      "day": "Вс",
      "time": ["17-00", "17-30", "18-00", "18-30"]
    }]
  }]
}, {
  "name": "Королев Тихон Филиппович",
  "photo": "assets/img/card-doctor-photo-5.png",
  "specialty": "Стоматолог",
  "cost": "1800",
  "child": true,
  "listClinic": [{
    "clinic": "Сокольники",
    "timeJob": [{
      "day": "Пн",
      "time": ["17-30", "18-00", "18-30", "19-00"]
    }, {
      "day": "Вт",
      "time": ["18-00", "18-30", "19-00", "19-30"]
    }, {
      "day": "Ср",
      "time": ["18-30", "19-00", "19-30", "20-00"]
    }, {
      "day": "Чт",
      "time": ["19-00", "19-30", "20-00", "20-30"]
    }]
  }]
}, {
  "name": "Марков Всеволод Ильич",
  "photo": "assets/img/card-doctor-photo-6.png",
  "specialty": "Гематолог",
  "cost": "3700",
  "child": false,
  "listClinic": [{
    "clinic": "Красносельская",
    "timeJob": [{
      "day": "Пт",
      "time": ["09-30", "10-00", "10-30", "11-00"]
    }, {
      "day": "Сб",
      "time": ["10-00", "10-30", "11-00", "11-30"]
    }, {
      "day": "Вс",
      "time": ["10-30", "11-00", "11-30", "12-00"]
    }, {
      "day": "Пн",
      "time": ["11-00", "11-30", "12-00", "12-30"]
    }]
  }, {
    "clinic": "Комсомольская",
    "timeJob": [{
      "day": "Вт",
      "time": ["11-30", "12-00", "12-30", "13-00"]
    }, {
      "day": "Ср",
      "time": ["12-00", "12-30", "13-00", "13-30"]
    }, {
      "day": "Чт",
      "time": ["12-30", "13-00", "13-30", "14-00"]
    }, {
      "day": "Пт",
      "time": ["13-00", "13-30", "14-00", "14-30"]
    }]
  }, {
    "clinic": "Красные ворота",
    "timeJob": [{
      "day": "Сб",
      "time": ["13-30", "14-00", "14-30", "15-00"]
    }, {
      "day": "Вс",
      "time": ["14-00", "14-30", "15-00", "15-30"]
    }, {
      "day": "Пн",
      "time": ["14-30", "15-00", "15-30", "16-00"]
    }, {
      "day": "Вт",
      "time": ["15-00", "15-30", "16-00", "16-30"]
    }]
  }, {
    "clinic": "Чистые пруды",
    "timeJob": [{
      "day": "Ср",
      "time": ["15-30", "16-00", "16-30", "17-00"]
    }, {
      "day": "Чт",
      "time": ["16-00", "16-30", "17-00", "17-30"]
    }, {
      "day": "Пт",
      "time": ["16-30", "17-00", "17-30", "18-00"]
    }, {
      "day": "Сб",
      "time": ["17-00", "17-30", "18-00", "18-30"]
    }]
  }, {
    "clinic": "Лубянка",
    "timeJob": [{
      "day": "Вс",
      "time": ["17-30", "18-00", "18-30", "19-00"]
    }, {
      "day": "Пн",
      "time": ["18-00", "18-30", "19-00", "19-30"]
    }, {
      "day": "Вт",
      "time": ["18-30", "19-00", "19-30", "20-00"]
    }, {
      "day": "Ср",
      "time": ["19-00", "19-30", "20-00", "20-30"]
    }]
  }, {
    "clinic": "Марьино",
    "timeJob": [{
      "day": "Чт",
      "time": ["09-30", "10-00", "10-30", "11-00"]
    }, {
      "day": "Пт",
      "time": ["10-00", "10-30", "11-00", "11-30"]
    }, {
      "day": "Сб",
      "time": ["10-30", "11-00", "11-30", "12-00"]
    }, {
      "day": "Вс",
      "time": ["11-00", "11-30", "12-00", "12-30"]
    }]
  }]
}, {
  "name": "Алексеев Арсений Даниилович",
  "photo": "assets/img/card-doctor-photo-7.png",
  "specialty": "Генетик",
  "cost": "1650",
  "child": false,
  "listClinic": [{
    "clinic": "Перово",
    "timeJob": [{
      "day": "Пн",
      "time": ["11-30", "12-00", "12-30", "13-00"]
    }, {
      "day": "Вт",
      "time": ["12-00", "12-30", "13-00", "13-30"]
    }, {
      "day": "Ср",
      "time": ["12-30", "13-00", "13-30", "14-00"]
    }, {
      "day": "Чт",
      "time": ["13-00", "13-30", "14-00", "14-30"]
    }]
  }, {
    "clinic": "Парк культуры",
    "timeJob": [{
      "day": "Пт",
      "time": ["13-30", "14-00", "14-30", "15-00"]
    }, {
      "day": "Сб",
      "time": ["14-00", "14-30", "15-00", "15-30"]
    }, {
      "day": "Вс",
      "time": ["14-30", "15-00", "15-30", "16-00"]
    }, {
      "day": "Пн",
      "time": ["15-00", "15-30", "16-00", "16-30"]
    }]
  }, {
    "clinic": "Фрунзенская",
    "timeJob": [{
      "day": "Вт",
      "time": ["15-30", "16-00", "16-30", "17-00"]
    }, {
      "day": "Ср",
      "time": ["16-00", "16-30", "17-00", "17-30"]
    }, {
      "day": "Чт",
      "time": ["16-30", "17-00", "17-30", "18-00"]
    }, {
      "day": "Пт",
      "time": ["17-00", "17-30", "18-00", "18-30"]
    }]
  }]
}, {
  "name": "Ковалев Савелий Романович",
  "photo": "assets/img/card-doctor-photo-8.png",
  "specialty": "Дерматовенеролог",
  "cost": "2300",
  "child": false,
  "listClinic": [{
    "clinic": "Черкизовская",
    "timeJob": [{
      "day": "Сб",
      "time": ["17-30", "18-00", "18-30", "19-00"]
    }, {
      "day": "Вс",
      "time": ["18-00", "18-30", "19-00", "19-30"]
    }, {
      "day": "Пн",
      "time": ["18-30", "19-00", "19-30", "20-00"]
    }, {
      "day": "Вт",
      "time": ["19-00", "19-30", "20-00", "20-30"]
    }]
  }, {
    "clinic": "Преображенская площадь",
    "timeJob": [{
      "day": "Ср",
      "time": ["09-30", "10-00", "10-30", "11-00"]
    }, {
      "day": "Чт",
      "time": ["10-00", "10-30", "11-00", "11-30"]
    }, {
      "day": "Пт",
      "time": ["10-30", "11-00", "11-30", "12-00"]
    }, {
      "day": "Сб",
      "time": ["11-00", "11-30", "12-00", "12-30"]
    }]
  }]
}, {
  "name": "Смирнов Даниил Александрович",
  "photo": "assets/img/card-doctor-photo-9.png",
  "specialty": "Кардиолог",
  "cost": "3100",
  "child": true,
  "listClinic": [{
    "clinic": "Сокольники",
    "timeJob": [{
      "day": "Вс",
      "time": ["11-30", "12-00", "12-30", "13-00"]
    }, {
      "day": "Пн",
      "time": ["12-00", "12-30", "13-00", "13-30"]
    }, {
      "day": "Вт",
      "time": ["12-30", "13-00", "13-30", "14-00"]
    }, {
      "day": "Ср",
      "time": ["13-00", "13-30", "14-00", "14-30"]
    }]
  }]
}, {
  "name": "Шувалов Арсений Маркович",
  "photo": "assets/img/card-doctor-photo-10.png",
  "specialty": "Колопроктолог",
  "cost": "2900",
  "child": false,
  "listClinic": [{
    "clinic": "Красносельская",
    "timeJob": [{
      "day": "Чт",
      "time": ["13-30", "14-00", "14-30", "15-00"]
    }, {
      "day": "Пт",
      "time": ["14-00", "14-30", "15-00", "15-30"]
    }, {
      "day": "Сб",
      "time": ["14-30", "15-00", "15-30", "16-00"]
    }, {
      "day": "Вс",
      "time": ["15-00", "15-30", "16-00", "16-30"]
    }]
  }, {
    "clinic": "Комсомольская",
    "timeJob": [{
      "day": "Пн",
      "time": ["15-30", "16-00", "16-30", "17-00"]
    }, {
      "day": "Вт",
      "time": ["16-00", "16-30", "17-00", "17-30"]
    }, {
      "day": "Ср",
      "time": ["16-30", "17-00", "17-30", "18-00"]
    }, {
      "day": "Чт",
      "time": ["17-00", "17-30", "18-00", "18-30"]
    }]
  }, {
    "clinic": "Красные ворота",
    "timeJob": [{
      "day": "Пт",
      "time": ["17-30", "18-00", "18-30", "19-00"]
    }, {
      "day": "Сб",
      "time": ["18-00", "18-30", "19-00", "19-30"]
    }, {
      "day": "Вс",
      "time": ["18-30", "19-00", "19-30", "20-00"]
    }, {
      "day": "Пн",
      "time": ["19-00", "19-30", "20-00", "20-30"]
    }]
  }, {
    "clinic": "Чистые пруды",
    "timeJob": [{
      "day": "Вт",
      "time": ["09-30", "10-00", "10-30", "11-00"]
    }, {
      "day": "Ср",
      "time": ["10-00", "10-30", "11-00", "11-30"]
    }, {
      "day": "Чт",
      "time": ["10-30", "11-00", "11-30", "12-00"]
    }, {
      "day": "Пт",
      "time": ["11-00", "11-30", "12-00", "12-30"]
    }]
  }, {
    "clinic": "Лубянка",
    "timeJob": [{
      "day": "Сб",
      "time": ["11-30", "12-00", "12-30", "13-00"]
    }, {
      "day": "Вс",
      "time": ["12-00", "12-30", "13-00", "13-30"]
    }, {
      "day": "Пн",
      "time": ["12-30", "13-00", "13-30", "14-00"]
    }, {
      "day": "Вт",
      "time": ["13-00", "13-30", "14-00", "14-30"]
    }]
  }, {
    "clinic": "Марьино",
    "timeJob": [{
      "day": "Ср",
      "time": ["13-30", "14-00", "14-30", "15-00"]
    }, {
      "day": "Чт",
      "time": ["14-00", "14-30", "15-00", "15-30"]
    }, {
      "day": "Пт",
      "time": ["14-30", "15-00", "15-30", "16-00"]
    }, {
      "day": "Сб",
      "time": ["15-00", "15-30", "16-00", "16-30"]
    }]
  }]
}, {
  "name": "Ильин Леон Маркович",
  "photo": "assets/img/card-doctor-photo-11.png",
  "specialty": "Логопед",
  "cost": "4100",
  "child": false,
  "listClinic": [{
    "clinic": "Перово",
    "timeJob": [{
      "day": "Вс",
      "time": ["15-30", "16-00", "16-30", "17-00"]
    }, {
      "day": "Пн",
      "time": ["16-00", "16-30", "17-00", "17-30"]
    }, {
      "day": "Вт",
      "time": ["16-30", "17-00", "17-30", "18-00"]
    }, {
      "day": "Ср",
      "time": ["17-00", "17-30", "18-00", "18-30"]
    }]
  }, {
    "clinic": "Парк культуры",
    "timeJob": [{
      "day": "Чт",
      "time": ["17-30", "18-00", "18-30", "19-00"]
    }, {
      "day": "Пт",
      "time": ["18-00", "18-30", "19-00", "19-30"]
    }, {
      "day": "Сб",
      "time": ["18-30", "19-00", "19-30", "20-00"]
    }, {
      "day": "Вс",
      "time": ["19-00", "19-30", "20-00", "20-30"]
    }]
  }, {
    "clinic": "Фрунзенская",
    "timeJob": [{
      "day": "Пн",
      "time": ["09-30", "10-00", "10-30", "11-00"]
    }, {
      "day": "Вт",
      "time": ["10-00", "10-30", "11-00", "11-30"]
    }, {
      "day": "Ср",
      "time": ["10-30", "11-00", "11-30", "12-00"]
    }, {
      "day": "Чт",
      "time": ["11-00", "11-30", "12-00", "12-30"]
    }]
  }]
}, {
  "name": "Васильев Илья Владимирович",
  "photo": "assets/img/card-doctor-photo-12.png",
  "specialty": "Маммолог",
  "cost": "1200",
  "child": true,
  "listClinic": [{
    "clinic": "Черкизовская",
    "timeJob": [{
      "day": "Пт",
      "time": ["11-30", "12-00", "12-30", "13-00"]
    }, {
      "day": "Сб",
      "time": ["12-00", "12-30", "13-00", "13-30"]
    }, {
      "day": "Вс",
      "time": ["12-30", "13-00", "13-30", "14-00"]
    }, {
      "day": "Пн",
      "time": ["13-00", "13-30", "14-00", "14-30"]
    }]
  }, {
    "clinic": "Преображенская площадь",
    "timeJob": [{
      "day": "Вт",
      "time": ["13-30", "14-00", "14-30", "15-00"]
    }, {
      "day": "Ср",
      "time": ["14-00", "14-30", "15-00", "15-30"]
    }, {
      "day": "Чт",
      "time": ["14-30", "15-00", "15-30", "16-00"]
    }, {
      "day": "Пт",
      "time": ["15-00", "15-30", "16-00", "16-30"]
    }]
  }, {
    "clinic": "Сокольники",
    "timeJob": [{
      "day": "Сб",
      "time": ["15-30", "16-00", "16-30", "17-00"]
    }, {
      "day": "Вс",
      "time": ["16-00", "16-30", "17-00", "17-30"]
    }, {
      "day": "Пн",
      "time": ["16-30", "17-00", "17-30", "18-00"]
    }, {
      "day": "Вт",
      "time": ["17-00", "17-30", "18-00", "18-30"]
    }]
  }]
}, {
  "name": "Алексеев Василий Артурович",
  "photo": "assets/img/card-doctor-photo-13.png",
  "specialty": "Нейрофизиолог",
  "cost": "1500",
  "child": true,
  "listClinic": [{
    "clinic": "Красносельская",
    "timeJob": [{
      "day": "Ср",
      "time": ["17-30", "18-00", "18-30", "19-00"]
    }, {
      "day": "Чт",
      "time": ["18-00", "18-30", "19-00", "19-30"]
    }, {
      "day": "Пт",
      "time": ["18-30", "19-00", "19-30", "20-00"]
    }, {
      "day": "Сб",
      "time": ["19-00", "19-30", "20-00", "20-30"]
    }]
  }, {
    "clinic": "Комсомольская",
    "timeJob": [{
      "day": "Вс",
      "time": ["09-30", "10-00", "10-30", "11-00"]
    }, {
      "day": "Пн",
      "time": ["10-00", "10-30", "11-00", "11-30"]
    }, {
      "day": "Вт",
      "time": ["10-30", "11-00", "11-30", "12-00"]
    }, {
      "day": "Ср",
      "time": ["11-00", "11-30", "12-00", "12-30"]
    }]
  }, {
    "clinic": "Красные ворота",
    "timeJob": [{
      "day": "Чт",
      "time": ["11-30", "12-00", "12-30", "13-00"]
    }, {
      "day": "Пт",
      "time": ["12-00", "12-30", "13-00", "13-30"]
    }, {
      "day": "Сб",
      "time": ["12-30", "13-00", "13-30", "14-00"]
    }, {
      "day": "Вс",
      "time": ["13-00", "13-30", "14-00", "14-30"]
    }]
  }, {
    "clinic": "Чистые пруды",
    "timeJob": [{
      "day": "Пн",
      "time": ["13-30", "14-00", "14-30", "15-00"]
    }, {
      "day": "Вт",
      "time": ["14-00", "14-30", "15-00", "15-30"]
    }, {
      "day": "Ср",
      "time": ["14-30", "15-00", "15-30", "16-00"]
    }, {
      "day": "Чт",
      "time": ["15-00", "15-30", "16-00", "16-30"]
    }]
  }, {
    "clinic": "Лубянка",
    "timeJob": [{
      "day": "Пт",
      "time": ["15-30", "16-00", "16-30", "17-00"]
    }, {
      "day": "Сб",
      "time": ["16-00", "16-30", "17-00", "17-30"]
    }, {
      "day": "Вс",
      "time": ["16-30", "17-00", "17-30", "18-00"]
    }, {
      "day": "Пн",
      "time": ["17-00", "17-30", "18-00", "18-30"]
    }]
  }]
}, {
  "name": "Васильев Александр Ильич",
  "photo": "assets/img/card-doctor-photo-14.png",
  "specialty": "Нейрохирург",
  "cost": "2500",
  "child": true,
  "listClinic": [{
    "clinic": "Марьино",
    "timeJob": [{
      "day": "Вт",
      "time": ["17-30", "18-00", "18-30", "19-00"]
    }, {
      "day": "Ср",
      "time": ["18-00", "18-30", "19-00", "19-30"]
    }, {
      "day": "Чт",
      "time": ["18-30", "19-00", "19-30", "20-00"]
    }, {
      "day": "Пт",
      "time": ["19-00", "19-30", "20-00", "20-30"]
    }]
  }, {
    "clinic": "Перово",
    "timeJob": [{
      "day": "Сб",
      "time": ["09-30", "10-00", "10-30", "11-00"]
    }, {
      "day": "Вс",
      "time": ["10-00", "10-30", "11-00", "11-30"]
    }, {
      "day": "Пн",
      "time": ["10-30", "11-00", "11-30", "12-00"]
    }, {
      "day": "Вт",
      "time": ["11-00", "11-30", "12-00", "12-30"]
    }]
  }]
}, {
  "name": "Леонов Владимир Кириллович",
  "photo": "assets/img/card-doctor-photo-15.png",
  "specialty": "Диетолог",
  "cost": "3200",
  "child": false,
  "listClinic": [{
    "clinic": "Парк культуры",
    "timeJob": [{
      "day": "Ср",
      "time": ["11-30", "12-00", "12-30", "13-00"]
    }, {
      "day": "Чт",
      "time": ["12-00", "12-30", "13-00", "13-30"]
    }, {
      "day": "Пт",
      "time": ["12-30", "13-00", "13-30", "14-00"]
    }, {
      "day": "Сб",
      "time": ["13-00", "13-30", "14-00", "14-30"]
    }]
  }, {
    "clinic": "Фрунзенская",
    "timeJob": [{
      "day": "Вс",
      "time": ["13-30", "14-00", "14-30", "15-00"]
    }, {
      "day": "Пн",
      "time": ["14-00", "14-30", "15-00", "15-30"]
    }, {
      "day": "Вт",
      "time": ["14-30", "15-00", "15-30", "16-00"]
    }, {
      "day": "Ср",
      "time": ["15-00", "15-30", "16-00", "16-30"]
    }]
  }, {
    "clinic": "Черкизовская",
    "timeJob": [{
      "day": "Чт",
      "time": ["15-30", "16-00", "16-30", "17-00"]
    }, {
      "day": "Пт",
      "time": ["16-00", "16-30", "17-00", "17-30"]
    }, {
      "day": "Сб",
      "time": ["16-30", "17-00", "17-30", "18-00"]
    }, {
      "day": "Вс",
      "time": ["17-00", "17-30", "18-00", "18-30"]
    }]
  }]
}, {
  "name": "Кулешова Варвара Петровна",
  "photo": "assets/img/card-doctor-photo-16.png",
  "specialty": "Остеопат",
  "cost": "1800",
  "child": true,
  "listClinic": [{
    "clinic": "Преображенская площадь",
    "timeJob": [{
      "day": "Пн",
      "time": ["17-30", "18-00", "18-30", "19-00"]
    }, {
      "day": "Вт",
      "time": ["18-00", "18-30", "19-00", "19-30"]
    }, {
      "day": "Ср",
      "time": ["18-30", "19-00", "19-30", "20-00"]
    }, {
      "day": "Чт",
      "time": ["19-00", "19-30", "20-00", "20-30"]
    }]
  }, {
    "clinic": "Сокольники",
    "timeJob": [{
      "day": "Пт",
      "time": ["09-30", "10-00", "10-30", "11-00"]
    }, {
      "day": "Сб",
      "time": ["10-00", "10-30", "11-00", "11-30"]
    }, {
      "day": "Вс",
      "time": ["10-30", "11-00", "11-30", "12-00"]
    }, {
      "day": "Пн",
      "time": ["11-00", "11-30", "12-00", "12-30"]
    }]
  }, {
    "clinic": "Красносельская",
    "timeJob": [{
      "day": "Вт",
      "time": ["11-30", "12-00", "12-30", "13-00"]
    }, {
      "day": "Ср",
      "time": ["12-00", "12-30", "13-00", "13-30"]
    }, {
      "day": "Чт",
      "time": ["12-30", "13-00", "13-30", "14-00"]
    }, {
      "day": "Пт",
      "time": ["13-00", "13-30", "14-00", "14-30"]
    }]
  }, {
    "clinic": "Комсомольская",
    "timeJob": [{
      "day": "Сб",
      "time": ["13-30", "14-00", "14-30", "15-00"]
    }, {
      "day": "Вс",
      "time": ["14-00", "14-30", "15-00", "15-30"]
    }, {
      "day": "Пн",
      "time": ["14-30", "15-00", "15-30", "16-00"]
    }, {
      "day": "Вт",
      "time": ["15-00", "15-30", "16-00", "16-30"]
    }]
  }]
}, {
  "name": "Мельникова Екатерина Семёновна",
  "photo": "assets/img/card-doctor-photo-17.png",
  "specialty": "Пластический хирург",
  "cost": "3700",
  "child": false,
  "listClinic": [{
    "clinic": "Красные ворота",
    "timeJob": [{
      "day": "Ср",
      "time": ["15-30", "16-00", "16-30", "17-00"]
    }, {
      "day": "Чт",
      "time": ["16-00", "16-30", "17-00", "17-30"]
    }, {
      "day": "Пт",
      "time": ["16-30", "17-00", "17-30", "18-00"]
    }, {
      "day": "Сб",
      "time": ["17-00", "17-30", "18-00", "18-30"]
    }]
  }, {
    "clinic": "Чистые пруды",
    "timeJob": [{
      "day": "Вс",
      "time": ["17-30", "18-00", "18-30", "19-00"]
    }, {
      "day": "Пн",
      "time": ["18-00", "18-30", "19-00", "19-30"]
    }, {
      "day": "Вт",
      "time": ["18-30", "19-00", "19-30", "20-00"]
    }, {
      "day": "Ср",
      "time": ["19-00", "19-30", "20-00", "20-30"]
    }]
  }, {
    "clinic": "Лубянка",
    "timeJob": [{
      "day": "Чт",
      "time": ["09-30", "10-00", "10-30", "11-00"]
    }, {
      "day": "Пт",
      "time": ["10-00", "10-30", "11-00", "11-30"]
    }, {
      "day": "Сб",
      "time": ["10-30", "11-00", "11-30", "12-00"]
    }, {
      "day": "Вс",
      "time": ["11-00", "11-30", "12-00", "12-30"]
    }]
  }, {
    "clinic": "Марьино",
    "timeJob": [{
      "day": "Пн",
      "time": ["11-30", "12-00", "12-30", "13-00"]
    }, {
      "day": "Вт",
      "time": ["12-00", "12-30", "13-00", "13-30"]
    }, {
      "day": "Ср",
      "time": ["12-30", "13-00", "13-30", "14-00"]
    }, {
      "day": "Чт",
      "time": ["13-00", "13-30", "14-00", "14-30"]
    }]
  }, {
    "clinic": "Перово",
    "timeJob": [{
      "day": "Пт",
      "time": ["13-30", "14-00", "14-30", "15-00"]
    }, {
      "day": "Сб",
      "time": ["14-00", "14-30", "15-00", "15-30"]
    }, {
      "day": "Вс",
      "time": ["14-30", "15-00", "15-30", "16-00"]
    }, {
      "day": "Пн",
      "time": ["15-00", "15-30", "16-00", "16-30"]
    }]
  }]
}, {
  "name": "Иванова Мира Артёмовна",
  "photo": "assets/img/card-doctor-photo-18.png",
  "specialty": "Сомнолог",
  "cost": "1650",
  "child": false,
  "listClinic": [{
    "clinic": "Парк культуры",
    "timeJob": [{
      "day": "Вт",
      "time": ["15-30", "16-00", "16-30", "17-00"]
    }, {
      "day": "Ср",
      "time": ["16-00", "16-30", "17-00", "17-30"]
    }, {
      "day": "Чт",
      "time": ["16-30", "17-00", "17-30", "18-00"]
    }, {
      "day": "Пт",
      "time": ["17-00", "17-30", "18-00", "18-30"]
    }]
  }, {
    "clinic": "Фрунзенская",
    "timeJob": [{
      "day": "Сб",
      "time": ["17-30", "18-00", "18-30", "19-00"]
    }, {
      "day": "Вс",
      "time": ["18-00", "18-30", "19-00", "19-30"]
    }, {
      "day": "Пн",
      "time": ["18-30", "19-00", "19-30", "20-00"]
    }, {
      "day": "Вт",
      "time": ["19-00", "19-30", "20-00", "20-30"]
    }]
  }]
}, {
  "name": "Федорова Валерия Тимофеевна",
  "photo": "assets/img/card-doctor-photo-19.png",
  "specialty": "Трихолог",
  "cost": "2300",
  "child": false,
  "listClinic": [{
    "clinic": "Черкизовская",
    "timeJob": [{
      "day": "Ср",
      "time": ["09-30", "10-00", "10-30", "11-00"]
    }, {
      "day": "Чт",
      "time": ["10-00", "10-30", "11-00", "11-30"]
    }, {
      "day": "Пт",
      "time": ["10-30", "11-00", "11-30", "12-00"]
    }, {
      "day": "Сб",
      "time": ["11-00", "11-30", "12-00", "12-30"]
    }]
  }]
}, {
  "name": "Грачева Вероника Львовна",
  "photo": "assets/img/card-doctor-photo-20.png",
  "specialty": "Физиотерапевт",
  "cost": "3100",
  "child": true,
  "listClinic": [{
    "clinic": "Преображенская площадь",
    "timeJob": [{
      "day": "Вс",
      "time": ["11-30", "12-00", "12-30", "13-00"]
    }, {
      "day": "Пн",
      "time": ["12-00", "12-30", "13-00", "13-30"]
    }, {
      "day": "Вт",
      "time": ["12-30", "13-00", "13-30", "14-00"]
    }, {
      "day": "Ср",
      "time": ["13-00", "13-30", "14-00", "14-30"]
    }]
  }, {
    "clinic": "Сокольники",
    "timeJob": [{
      "day": "Чт",
      "time": ["13-30", "14-00", "14-30", "15-00"]
    }, {
      "day": "Пт",
      "time": ["14-00", "14-30", "15-00", "15-30"]
    }, {
      "day": "Сб",
      "time": ["14-30", "15-00", "15-30", "16-00"]
    }, {
      "day": "Вс",
      "time": ["15-00", "15-30", "16-00", "16-30"]
    }]
  }, {
    "clinic": "Красносельская",
    "timeJob": [{
      "day": "Пн",
      "time": ["15-30", "16-00", "16-30", "17-00"]
    }, {
      "day": "Вт",
      "time": ["16-00", "16-30", "17-00", "17-30"]
    }, {
      "day": "Ср",
      "time": ["16-30", "17-00", "17-30", "18-00"]
    }, {
      "day": "Чт",
      "time": ["17-00", "17-30", "18-00", "18-30"]
    }]
  }, {
    "clinic": "Комсомольская",
    "timeJob": [{
      "day": "Пт",
      "time": ["17-30", "18-00", "18-30", "19-00"]
    }, {
      "day": "Сб",
      "time": ["18-00", "18-30", "19-00", "19-30"]
    }, {
      "day": "Вс",
      "time": ["18-30", "19-00", "19-30", "20-00"]
    }, {
      "day": "Пн",
      "time": ["19-00", "19-30", "20-00", "20-30"]
    }]
  }, {
    "clinic": "Красные ворота",
    "timeJob": [{
      "day": "Вт",
      "time": ["09-30", "10-00", "10-30", "11-00"]
    }, {
      "day": "Ср",
      "time": ["10-00", "10-30", "11-00", "11-30"]
    }, {
      "day": "Чт",
      "time": ["10-30", "11-00", "11-30", "12-00"]
    }, {
      "day": "Пт",
      "time": ["11-00", "11-30", "12-00", "12-30"]
    }]
  }, {
    "clinic": "Чистые пруды",
    "timeJob": [{
      "day": "Сб",
      "time": ["11-30", "12-00", "12-30", "13-00"]
    }, {
      "day": "Вс",
      "time": ["12-00", "12-30", "13-00", "13-30"]
    }, {
      "day": "Пн",
      "time": ["12-30", "13-00", "13-30", "14-00"]
    }, {
      "day": "Вт",
      "time": ["13-00", "13-30", "14-00", "14-30"]
    }]
  }]
}, {
  "name": "Румянцева Ева Михайловна",
  "photo": "assets/img/card-doctor-photo-21.png",
  "specialty": "Флеболог",
  "cost": "2900",
  "child": false,
  "listClinic": [{
    "clinic": "Лубянка",
    "timeJob": [{
      "day": "Ср",
      "time": ["13-30", "14-00", "14-30", "15-00"]
    }, {
      "day": "Чт",
      "time": ["14-00", "14-30", "15-00", "15-30"]
    }, {
      "day": "Пт",
      "time": ["14-30", "15-00", "15-30", "16-00"]
    }, {
      "day": "Сб",
      "time": ["15-00", "15-30", "16-00", "16-30"]
    }]
  }, {
    "clinic": "Марьино",
    "timeJob": [{
      "day": "Вс",
      "time": ["15-30", "16-00", "16-30", "17-00"]
    }, {
      "day": "Пн",
      "time": ["16-00", "16-30", "17-00", "17-30"]
    }, {
      "day": "Вт",
      "time": ["16-30", "17-00", "17-30", "18-00"]
    }, {
      "day": "Ср",
      "time": ["17-00", "17-30", "18-00", "18-30"]
    }]
  }, {
    "clinic": "Перово",
    "timeJob": [{
      "day": "Чт",
      "time": ["17-30", "18-00", "18-30", "19-00"]
    }, {
      "day": "Пт",
      "time": ["18-00", "18-30", "19-00", "19-30"]
    }, {
      "day": "Сб",
      "time": ["18-30", "19-00", "19-30", "20-00"]
    }, {
      "day": "Вс",
      "time": ["19-00", "19-30", "20-00", "20-30"]
    }]
  }]
}, {
  "name": "Суханова Ярослава Демидовна",
  "photo": "assets/img/card-doctor-photo-22.png",
  "specialty": "Терапевт",
  "cost": "4100",
  "child": false,
  "listClinic": [{
    "clinic": "Парк культуры",
    "timeJob": [{
      "day": "Пн",
      "time": ["09-30", "10-00", "10-30", "11-00"]
    }, {
      "day": "Вт",
      "time": ["10-00", "10-30", "11-00", "11-30"]
    }, {
      "day": "Ср",
      "time": ["10-30", "11-00", "11-30", "12-00"]
    }, {
      "day": "Чт",
      "time": ["11-00", "11-30", "12-00", "12-30"]
    }]
  }, {
    "clinic": "Фрунзенская",
    "timeJob": [{
      "day": "Пт",
      "time": ["11-30", "12-00", "12-30", "13-00"]
    }, {
      "day": "Сб",
      "time": ["12-00", "12-30", "13-00", "13-30"]
    }, {
      "day": "Вс",
      "time": ["12-30", "13-00", "13-30", "14-00"]
    }, {
      "day": "Пн",
      "time": ["13-00", "13-30", "14-00", "14-30"]
    }]
  }]
}, {
  "name": "Блинова Вера Кирилловна",
  "photo": "assets/img/card-doctor-photo-23.png",
  "specialty": "Хирург",
  "cost": "1200",
  "child": false,
  "listClinic": [{
    "clinic": "Черкизовская",
    "timeJob": [{
      "day": "Вт",
      "time": ["13-30", "14-00", "14-30", "15-00"]
    }, {
      "day": "Ср",
      "time": ["14-00", "14-30", "15-00", "15-30"]
    }, {
      "day": "Чт",
      "time": ["14-30", "15-00", "15-30", "16-00"]
    }, {
      "day": "Пт",
      "time": ["15-00", "15-30", "16-00", "16-30"]
    }]
  }]
}, {
  "name": "Галкина Александра Тимофеевна",
  "photo": "assets/img/card-doctor-photo-24.png",
  "specialty": "Генеколог",
  "cost": "1500",
  "child": true,
  "listClinic": [{
    "clinic": "Преображенская площадь",
    "timeJob": [{
      "day": "Сб",
      "time": ["15-30", "16-00", "16-30", "17-00"]
    }, {
      "day": "Вс",
      "time": ["16-00", "16-30", "17-00", "17-30"]
    }, {
      "day": "Пн",
      "time": ["16-30", "17-00", "17-30", "18-00"]
    }, {
      "day": "Вт",
      "time": ["17-00", "17-30", "18-00", "18-30"]
    }]
  }, {
    "clinic": "Сокольники",
    "timeJob": [{
      "day": "Ср",
      "time": ["17-30", "18-00", "18-30", "19-00"]
    }, {
      "day": "Чт",
      "time": ["18-00", "18-30", "19-00", "19-30"]
    }, {
      "day": "Пт",
      "time": ["18-30", "19-00", "19-30", "20-00"]
    }, {
      "day": "Сб",
      "time": ["19-00", "19-30", "20-00", "20-30"]
    }]
  }, {
    "clinic": "Красносельская",
    "timeJob": [{
      "day": "Вс",
      "time": ["09-30", "10-00", "10-30", "11-00"]
    }, {
      "day": "Пн",
      "time": ["10-00", "10-30", "11-00", "11-30"]
    }, {
      "day": "Вт",
      "time": ["10-30", "11-00", "11-30", "12-00"]
    }, {
      "day": "Ср",
      "time": ["11-00", "11-30", "12-00", "12-30"]
    }]
  }, {
    "clinic": "Комсомольская",
    "timeJob": [{
      "day": "Чт",
      "time": ["11-30", "12-00", "12-30", "13-00"]
    }, {
      "day": "Пт",
      "time": ["12-00", "12-30", "13-00", "13-30"]
    }, {
      "day": "Сб",
      "time": ["12-30", "13-00", "13-30", "14-00"]
    }, {
      "day": "Вс",
      "time": ["13-00", "13-30", "14-00", "14-30"]
    }]
  }]
}, {
  "name": "Степанова Алия Тимофеевна",
  "photo": "assets/img/card-doctor-photo-25.png",
  "specialty": "Уролог",
  "cost": "2500",
  "child": true,
  "listClinic": [{
    "clinic": "Красные ворота",
    "timeJob": [{
      "day": "Пн",
      "time": ["13-30", "14-00", "14-30", "15-00"]
    }, {
      "day": "Вт",
      "time": ["14-00", "14-30", "15-00", "15-30"]
    }, {
      "day": "Ср",
      "time": ["14-30", "15-00", "15-30", "16-00"]
    }, {
      "day": "Чт",
      "time": ["15-00", "15-30", "16-00", "16-30"]
    }]
  }, {
    "clinic": "Чистые пруды",
    "timeJob": [{
      "day": "Пт",
      "time": ["15-30", "16-00", "16-30", "17-00"]
    }, {
      "day": "Сб",
      "time": ["16-00", "16-30", "17-00", "17-30"]
    }, {
      "day": "Вс",
      "time": ["16-30", "17-00", "17-30", "18-00"]
    }, {
      "day": "Пн",
      "time": ["17-00", "17-30", "18-00", "18-30"]
    }]
  }, {
    "clinic": "Лубянка",
    "timeJob": [{
      "day": "Вт",
      "time": ["17-30", "18-00", "18-30", "19-00"]
    }, {
      "day": "Ср",
      "time": ["18-00", "18-30", "19-00", "19-30"]
    }, {
      "day": "Чт",
      "time": ["18-30", "19-00", "19-30", "20-00"]
    }, {
      "day": "Пт",
      "time": ["19-00", "19-30", "20-00", "20-30"]
    }]
  }, {
    "clinic": "Марьино",
    "timeJob": [{
      "day": "Сб",
      "time": ["09-30", "10-00", "10-30", "11-00"]
    }, {
      "day": "Вс",
      "time": ["10-00", "10-30", "11-00", "11-30"]
    }, {
      "day": "Пн",
      "time": ["10-30", "11-00", "11-30", "12-00"]
    }, {
      "day": "Вт",
      "time": ["11-00", "11-30", "12-00", "12-30"]
    }]
  }, {
    "clinic": "Перово",
    "timeJob": [{
      "day": "Ср",
      "time": ["11-30", "12-00", "12-30", "13-00"]
    }, {
      "day": "Чт",
      "time": ["12-00", "12-30", "13-00", "13-30"]
    }, {
      "day": "Пт",
      "time": ["12-30", "13-00", "13-30", "14-00"]
    }, {
      "day": "Сб",
      "time": ["13-00", "13-30", "14-00", "14-30"]
    }]
  }]
}, {
  "name": "Борисова Лилия Сергеевна",
  "photo": "assets/img/card-doctor-photo-26.png",
  "specialty": "Дерматовенеролог",
  "cost": "3200",
  "child": true,
  "listClinic": [{
    "clinic": "Парк культуры",
    "timeJob": [{
      "day": "Вс",
      "time": ["13-30", "14-00", "14-30", "15-00"]
    }, {
      "day": "Пн",
      "time": ["14-00", "14-30", "15-00", "15-30"]
    }, {
      "day": "Вт",
      "time": ["14-30", "15-00", "15-30", "16-00"]
    }, {
      "day": "Ср",
      "time": ["15-00", "15-30", "16-00", "16-30"]
    }]
  }, {
    "clinic": "Фрунзенская",
    "timeJob": [{
      "day": "Чт",
      "time": ["15-30", "16-00", "16-30", "17-00"]
    }, {
      "day": "Пт",
      "time": ["16-00", "16-30", "17-00", "17-30"]
    }, {
      "day": "Сб",
      "time": ["16-30", "17-00", "17-30", "18-00"]
    }, {
      "day": "Вс",
      "time": ["17-00", "17-30", "18-00", "18-30"]
    }]
  }]
}, {
  "name": "Зайцева Алиса Петровна",
  "photo": "assets/img/card-doctor-photo-27.png",
  "specialty": "Кардиолог",
  "cost": "1800",
  "child": false,
  "listClinic": [{
    "clinic": "Черкизовская",
    "timeJob": [{
      "day": "Пн",
      "time": ["17-30", "18-00", "18-30", "19-00"]
    }, {
      "day": "Вт",
      "time": ["18-00", "18-30", "19-00", "19-30"]
    }, {
      "day": "Ср",
      "time": ["18-30", "19-00", "19-30", "20-00"]
    }, {
      "day": "Чт",
      "time": ["19-00", "19-30", "20-00", "20-30"]
    }]
  }]
}, {
  "name": "Кочетова Полина Даниловна",
  "photo": "assets/img/card-doctor-photo-28.png",
  "specialty": "Колопроктолог",
  "cost": "3700",
  "child": true,
  "listClinic": [{
    "clinic": "Преображенская площадь",
    "timeJob": [{
      "day": "Пт",
      "time": ["09-30", "10-00", "10-30", "11-00"]
    }, {
      "day": "Сб",
      "time": ["10-00", "10-30", "11-00", "11-30"]
    }, {
      "day": "Вс",
      "time": ["10-30", "11-00", "11-30", "12-00"]
    }, {
      "day": "Пн",
      "time": ["11-00", "11-30", "12-00", "12-30"]
    }]
  }, {
    "clinic": "Сокольники",
    "timeJob": [{
      "day": "Вт",
      "time": ["11-30", "12-00", "12-30", "13-00"]
    }, {
      "day": "Ср",
      "time": ["12-00", "12-30", "13-00", "13-30"]
    }, {
      "day": "Чт",
      "time": ["12-30", "13-00", "13-30", "14-00"]
    }, {
      "day": "Пт",
      "time": ["13-00", "13-30", "14-00", "14-30"]
    }]
  }, {
    "clinic": "Красносельская",
    "timeJob": [{
      "day": "Сб",
      "time": ["13-30", "14-00", "14-30", "15-00"]
    }, {
      "day": "Вс",
      "time": ["14-00", "14-30", "15-00", "15-30"]
    }, {
      "day": "Пн",
      "time": ["14-30", "15-00", "15-30", "16-00"]
    }, {
      "day": "Вт",
      "time": ["15-00", "15-30", "16-00", "16-30"]
    }]
  }, {
    "clinic": "Комсомольская",
    "timeJob": [{
      "day": "Ср",
      "time": ["15-30", "16-00", "16-30", "17-00"]
    }, {
      "day": "Чт",
      "time": ["16-00", "16-30", "17-00", "17-30"]
    }, {
      "day": "Пт",
      "time": ["16-30", "17-00", "17-30", "18-00"]
    }, {
      "day": "Сб",
      "time": ["17-00", "17-30", "18-00", "18-30"]
    }]
  }, {
    "clinic": "Красные ворота",
    "timeJob": [{
      "day": "Вс",
      "time": ["17-30", "18-00", "18-30", "19-00"]
    }, {
      "day": "Пн",
      "time": ["18-00", "18-30", "19-00", "19-30"]
    }, {
      "day": "Вт",
      "time": ["18-30", "19-00", "19-30", "20-00"]
    }, {
      "day": "Ср",
      "time": ["19-00", "19-30", "20-00", "20-30"]
    }]
  }, {
    "clinic": "Чистые пруды",
    "timeJob": [{
      "day": "Чт",
      "time": ["09-30", "10-00", "10-30", "11-00"]
    }, {
      "day": "Пт",
      "time": ["10-00", "10-30", "11-00", "11-30"]
    }, {
      "day": "Сб",
      "time": ["10-30", "11-00", "11-30", "12-00"]
    }, {
      "day": "Вс",
      "time": ["11-00", "11-30", "12-00", "12-30"]
    }]
  }]
}, {
  "name": "Калинина Анастасия Алиевна",
  "photo": "assets/img/card-doctor-photo-29.png",
  "specialty": "Логопед",
  "cost": "1650",
  "child": false,
  "listClinic": [{
    "clinic": "Лубянка",
    "timeJob": [{
      "day": "Пн",
      "time": ["11-30", "12-00", "12-30", "13-00"]
    }, {
      "day": "Вт",
      "time": ["12-00", "12-30", "13-00", "13-30"]
    }, {
      "day": "Ср",
      "time": ["12-30", "13-00", "13-30", "14-00"]
    }, {
      "day": "Чт",
      "time": ["13-00", "13-30", "14-00", "14-30"]
    }]
  }, {
    "clinic": "Марьино",
    "timeJob": [{
      "day": "Пт",
      "time": ["13-30", "14-00", "14-30", "15-00"]
    }, {
      "day": "Сб",
      "time": ["14-00", "14-30", "15-00", "15-30"]
    }, {
      "day": "Вс",
      "time": ["14-30", "15-00", "15-30", "16-00"]
    }, {
      "day": "Пн",
      "time": ["15-00", "15-30", "16-00", "16-30"]
    }]
  }, {
    "clinic": "Перово",
    "timeJob": [{
      "day": "Вт",
      "time": ["15-30", "16-00", "16-30", "17-00"]
    }, {
      "day": "Ср",
      "time": ["16-00", "16-30", "17-00", "17-30"]
    }, {
      "day": "Чт",
      "time": ["16-30", "17-00", "17-30", "18-00"]
    }, {
      "day": "Пт",
      "time": ["17-00", "17-30", "18-00", "18-30"]
    }]
  }]
}, {
  "name": "Тихомирова Арина Александровна",
  "photo": "assets/img/card-doctor-photo-30.png",
  "specialty": "Диетолог",
  "cost": "2300",
  "child": false,
  "listClinic": [{
    "clinic": "Парк культуры",
    "timeJob": [{
      "day": "Сб",
      "time": ["17-30", "18-00", "18-30", "19-00"]
    }, {
      "day": "Вс",
      "time": ["18-00", "18-30", "19-00", "19-30"]
    }, {
      "day": "Пн",
      "time": ["18-30", "19-00", "19-30", "20-00"]
    }, {
      "day": "Вт",
      "time": ["19-00", "19-30", "20-00", "20-30"]
    }]
  }, {
    "clinic": "Фрунзенская",
    "timeJob": [{
      "day": "Ср",
      "time": ["09-30", "10-00", "10-30", "11-00"]
    }, {
      "day": "Чт",
      "time": ["10-00", "10-30", "11-00", "11-30"]
    }, {
      "day": "Пт",
      "time": ["10-30", "11-00", "11-30", "12-00"]
    }, {
      "day": "Сб",
      "time": ["11-00", "11-30", "12-00", "12-30"]
    }]
  }]
}];
/* harmony default export */ __webpack_exports__["default"] = (doctorsData);

/***/ }),

/***/ "./src/js/db/hospitalAddressesDB.js":
/*!******************************************!*\
  !*** ./src/js/db/hospitalAddressesDB.js ***!
  \******************************************/
/*! exports provided: hospitalAddresses */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hospitalAddresses", function() { return hospitalAddresses; });
const hospitalAddresses = [{
  metro: 'Черкизовская',
  addresses: 'г. Москва, ул. Северный проезд, 15а'
}, {
  metro: 'Преображенская площадь',
  addresses: 'г. Москва, ул. Южная, 26'
}, {
  metro: 'Сокольники',
  addresses: 'г. Москва, ул. Механизаторов, 48'
}, {
  metro: 'Красносельская',
  addresses: 'г. Москва, ул. Октябрьская, 21'
}, {
  metro: 'Комсомольская',
  addresses: 'г. Москва, ул. Северная, 12'
}, {
  metro: 'Красные ворота',
  addresses: 'г. Москва, ул. Совхозная, 26'
}, {
  metro: 'Чистые пруды',
  addresses: 'г. Москва, ул. Горького, 14'
}, {
  metro: 'Лубянка',
  addresses: 'г. Москва, ул. Комсомольская, 17'
}, {
  metro: 'Марьино',
  addresses: 'г. Москва, ул. Чапаева, 5'
}, {
  metro: 'Перово',
  addresses: 'г. Москва, ул. Дорожная, 37'
}, {
  metro: 'Парк культуры',
  addresses: 'г. Москва, ул. Зимняя, 2в'
}, {
  metro: 'Фрунзенская',
  addresses: 'г. Москва, ул. Строительная, 18'
}];


/***/ }),

/***/ "./src/js/db/servicesPriceDB.js":
/*!**************************************!*\
  !*** ./src/js/db/servicesPriceDB.js ***!
  \**************************************/
/*! exports provided: servicesPriceDoctors, servicesPriceTests, servicesPriceCertificates, servicesPriceInspection, servicesPriceDiagnostics */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "servicesPriceDoctors", function() { return servicesPriceDoctors; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "servicesPriceTests", function() { return servicesPriceTests; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "servicesPriceCertificates", function() { return servicesPriceCertificates; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "servicesPriceInspection", function() { return servicesPriceInspection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "servicesPriceDiagnostics", function() { return servicesPriceDiagnostics; });
const servicesPriceDoctors = [['Прием уролога', 1500], ['Прием терапефта', 1500], ['Прием гастроэнтеролога', 1900], ['Прием отоларинголога', 2000], ['Прием хирурга', 2000], ['Прием гинеколог', 1900], ['Прием невролога', 3000], ['Прием психиатра', 2700], ['Прием ревматолог', 2300]];
const servicesPriceTests = [['COVID-19', 1200], ['OAK', 330], ['ОАМ', 350], ['Гаптоглобин', 650], ['Гомоцистеина', 1920], ['Цистатин С', 1500], ['Холестирин', 450], ['Анти-ТГ', 700], ['T-uptake', 500], ['Трансферрин', 630], ['Ревматоидный фактор', 550], ['Щелочная фосфатаза (ЩФ)', 430]];
const servicesPriceCertificates = [['Справка в бассейн', 1650], ['Справка в ГИБДД', 1100], ['Справка для вуза', 950], ['Справка 086 У', 700], ['Справка об эпидокружении', 1920], ['Справка 072/у', 1500], ['Освобождение от физ-ры', 450], ['Справка на оружие 002-оу', 1310], ['Справка для иностранных г-н', 1650], ['Справка 001-ГС/у', 1350]];
const servicesPriceInspection = [['Медосмотры сотрудников', 1650], ['Выездной медосмотр', 1100], ['Предварительный медосмотр', 950], ['Медосмотры водителей', 200], ['Периодический медосмотр', 1050]];
const servicesPriceDiagnostics = [['МРТ', 5000], ['КТ иследование', 3500], ['УЗИ диагностика', 950], ['ЭКГ (Электрокардиография)', 1300]];


/***/ }),

/***/ "./src/js/main.js":
/*!************************!*\
  !*** ./src/js/main.js ***!
  \************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _modules_modal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/modal */ "./src/js/modules/modal.js");
/* harmony import */ var _modules_slider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/slider */ "./src/js/modules/slider.js");
/* harmony import */ var _modules_specialistsToggle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/specialistsToggle */ "./src/js/modules/specialistsToggle.js");
/* harmony import */ var _modules_services__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/services */ "./src/js/modules/services.js");
/* harmony import */ var _modules_doctors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules/doctors */ "./src/js/modules/doctors.js");
/* harmony import */ var _modules_workSchedule__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./modules/workSchedule */ "./src/js/modules/workSchedule.js");
/* harmony import */ var _modules_appointment__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./modules/appointment */ "./src/js/modules/appointment.js");
/* harmony import */ var _modules_clinicsAddressesList__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./modules/clinicsAddressesList */ "./src/js/modules/clinicsAddressesList.js");








window.addEventListener('DOMContentLoaded', () => {
  Object(_modules_modal__WEBPACK_IMPORTED_MODULE_0__["default"])();
  Object(_modules_slider__WEBPACK_IMPORTED_MODULE_1__["default"])();
  Object(_modules_services__WEBPACK_IMPORTED_MODULE_3__["default"])();
  Object(_modules_clinicsAddressesList__WEBPACK_IMPORTED_MODULE_7__["default"])();
  try {
    Object(_modules_specialistsToggle__WEBPACK_IMPORTED_MODULE_2__["default"])();
  } catch (error) {}
  try {
    Object(_modules_doctors__WEBPACK_IMPORTED_MODULE_4__["default"])();
  } catch (error) {}
  try {
    Object(_modules_workSchedule__WEBPACK_IMPORTED_MODULE_5__["default"])();
  } catch (error) {}
  try {
    Object(_modules_appointment__WEBPACK_IMPORTED_MODULE_6__["default"])();
  } catch (error) {}
});

/***/ }),

/***/ "./src/js/modules/appointment.js":
/*!***************************************!*\
  !*** ./src/js/modules/appointment.js ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _db_doctorsDB__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../db/doctorsDB */ "./src/js/db/doctorsDB.js");
/* harmony import */ var _db_hospitalAddressesDB__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../db/hospitalAddressesDB */ "./src/js/db/hospitalAddressesDB.js");


const appointment = () => {
  const screenWrapper = document.querySelector('.screen__wrapper');
  let arrSpecialty = [];
  let arrSpecialtyChild = [];
  let choice = {
    name: '',
    specialization: '',
    metro: '',
    address: '',
    date: '',
    dateAtr: '',
    time: '',
    patientName: '',
    patientPhone: '',
    children: false
  };

  //second-screen str(выбор специалиста)
  _db_doctorsDB__WEBPACK_IMPORTED_MODULE_0__["default"].forEach(item => {
    arrSpecialty.push(item.specialty);
    if (item.child) {
      arrSpecialtyChild.push(item.specialty + ' дет.');
    }
  });
  const arrSpecialtySort = [...new Set(arrSpecialty)];
  function showSpecialty(arrSpec) {
    arrSpec.forEach(item => {
      let elm = document.createElement('div');
      elm.classList.add('choose-spec__item');
      elm.innerHTML = `
                <div class="choose-spec__icon">
                    <img src="assets/img/specialists-icon.svg" alt="">
                </div>
                <div class="choose-spec__title ">${item}</div>
            `;
      screenWrapper.append(elm);
    });
    chooseSpec();
  }
  showSpecialty(arrSpecialtySort.sort());
  function chooseSpec() {
    const chooseSpecItem = document.querySelectorAll('.choose-spec__title');
    chooseSpecItem.forEach(item => {
      item.addEventListener('click', e => {
        document.querySelectorAll('.screen__item').forEach(item => {
          item.removeEventListener('click', addEventByCardMetro);
        });
        let target = e.target;
        if (target.textContent.indexOf(' дет.') > 0) {
          choice.children = true;
        } else {
          choice.children = false;
        }
        choice.specialization = target.textContent.replace(' дет.', '').toLowerCase();
        chooseSpecItem.forEach(el => el.classList.remove('choose-spec__item_active'));
        item.classList.add('choose-spec__item_active');
      });
    });
  }
  const toggleAppointment = document.querySelector('.switch-btn');
  toggleAppointment.addEventListener('click', () => {
    toggleAppointment.classList.toggle('move-right');
    let text = document.querySelectorAll('.screen__toggle-text');
    screenWrapper.innerHTML = '';
    if (toggleAppointment.classList.contains('move-right')) {
      text[0].classList.remove('screen__toggle-text-active');
      text[1].classList.add('screen__toggle-text-active');
      showSpecialty(arrSpecialtyChild.sort());
    } else {
      text[0].classList.add('screen__toggle-text-active');
      text[1].classList.remove('screen__toggle-text-active');
      showSpecialty(arrSpecialtySort.sort());
    }
  });

  //first-screen str(где карточки с адресами)
  const screenWraperFirst = document.querySelector('.appointment__first-scr').children[4];
  function showMetro() {
    _db_hospitalAddressesDB__WEBPACK_IMPORTED_MODULE_1__["hospitalAddresses"].forEach(item => {
      let elm = document.createElement('div');
      elm.classList.add('screen__item');
      elm.innerHTML = `
                
                    <div class="screen__item-metro">
                        <img src="assets//img/metro-logo.svg" alt="">
                        <div class="screen__item-text">${item.metro}</div>
                    </div>
                    <p>Адрес:</p>
                    <div class="screen__item-address">${item.addresses}</div> 
                    <div class="screen__item-phone">+7(499) 658-963-25</div>
               
            `;
      screenWraperFirst.append(elm);
    });
  }
  showMetro();
  let metroVisible;
  function metroActive() {
    const arr = [];
    _db_doctorsDB__WEBPACK_IMPORTED_MODULE_0__["default"].forEach(item => {
      let str = choice.specialization;
      if (str == item.specialty.toLowerCase()) {
        item.listClinic.forEach(metro => {
          arr.push(metro.clinic);
        });
      }
    });
    const metroJob = [...new Set(arr)];

    //показываем только активные карточки с адресами
    metroVisible = metroJob;
    const screenItem = document.querySelectorAll('.screen__item');
    screenItem.forEach(item => {
      item.style = '';
      let element = item.children[0].innerText;
      metroJob.forEach(metro => {
        if (metro.toLowerCase() == element.toLowerCase()) {
          item.style.opacity = '1';
          item.style.cursor = 'pointer';

          //это событие тоже надо будет удалять
          item.addEventListener('click', addEventByCardMetro);
        }
      });
    });
  }

  //добавляем событие на карточки с метро(которые подходят)
  function addEventByCardMetro() {
    document.querySelectorAll('.screen__item').forEach(el => el.classList.remove('screen__item_activ'));
    this.classList.add('screen__item_activ');
    choice.metro = this.children[0].innerText;
    ;
    choice.address = this.children[2].innerText;
    showResultDoctorName();
  }

  //third-screen str
  const screenWrapperThird = document.querySelector('.screen__wrapper-third');
  const todayDate = new Date();
  let d = todayDate.getDate();
  let y = todayDate.getFullYear();
  let m = todayDate.getMonth();
  for (let i = 0; i < 14; i++) {
    let date = new Date(y, m, d);
    let day = date.toLocaleString("ru-ru", {
      weekday: 'short'
    });
    let month = date.toLocaleString("ru-ru", {
      month: 'short'
    });
    const elem = document.createElement('div');
    elem.classList.add('item', 'screen__item-third');
    elem.innerHTML = `
            <div class="item__month">${month[0].toUpperCase() + month.slice(1)}</div> 
            <div class="item__data">${date.getDate()} ${day}</div>
        `;
    elem.dataset.data = date;
    d++;
    screenWrapperThird.append(elem);
  }
  const screenChooseNameDoctors = document.querySelector('.screen__choose-name-doctors');

  //добавляет имена доступных докторов на страницу
  function addNameDoctor(doctor) {
    let element = document.createElement('div');
    element.classList.add('screen__name-doctor');
    element.innerHTML = `Врач ${doctor.specialty.toLowerCase()} - <span>${doctor.name}</span>`;
    screenChooseNameDoctors.append(element);
  }

  //одбирает имена докторов по метро и вызывает функцию addNameDoctor()
  function showResultDoctorName() {
    screenChooseNameDoctors.innerHTML = '';
    _db_doctorsDB__WEBPACK_IMPORTED_MODULE_0__["default"].forEach(doctor => {
      let vbf = choice.specialization;
      let metro = choice.metro;
      if (vbf == doctor.specialty.toLowerCase()) {
        doctor.listClinic.forEach(item => {
          if (metro == item.clinic) {
            addNameDoctor(doctor);
          }
        });
      }
    });
    eventAdd();
  }

  //запускается по клику на карточку с метро уберает стили активности с блоков время 
  //и запускает функцию showTimeDate() 
  function eventAdd() {
    let screenNameDoctor = document.querySelectorAll('.screen__name-doctor');
    if (screenNameDoctor.length < 2) {
      showTimeDate(screenNameDoctor[0].lastElementChild.innerText);
      choice.name = screenNameDoctor[0].lastChild.innerText;
      screenNameDoctor[0].style.color = 'var(--color-btn)';
    }
    screenNameDoctor.forEach(item => {
      item.addEventListener('click', e => {
        document.querySelector('.screen__selection span').innerHTML = '';
        document.querySelectorAll('.item__data').forEach(el => el.parentElement.classList.remove('item_third-active'));
        //убераем события с активных дат по клику на имя
        document.querySelectorAll('.screen__item-third').forEach(item => {
          item.removeEventListener('click', addEventDate);
        });

        //убираем все стили активности с блоков время
        document.querySelectorAll('.screen__item-time').forEach(item => {
          item.removeEventListener('click', addClassActiveByTime);
          item.style.opacity = '';
          item.style.cursor = '';
          item.classList.remove('item__point', 'item_third-active');
        });
        screenNameDoctor.forEach(item => item.style.color = '');
        item.style.color = 'var(--color-btn)';
        choice.name = item.lastElementChild.innerText;
        showTimeDate(item.lastElementChild.innerText);
      });
    });
  }
  const screnItemTime = document.querySelectorAll('.screen__item-time');
  function addClassActiveByTime() {
    choice.time = this.innerText;
    screnItemTime.forEach(item => item.classList.remove('item_third-active'));
    this.classList.add('item_third-active');
    showСhoiceDateTime();
  }

  //получаем дни работы выбраного доктора и 
  //добавляем классы активности и событие на айтемы с датой и запускаем функцию showTimeJob();
  let jobTime;
  function showTimeDate(name) {
    let doctorNameResult = name;
    const doctorMetroResult = choice.metro;
    let dayJob = [];

    //получаем дни работы выбраного доктора
    _db_doctorsDB__WEBPACK_IMPORTED_MODULE_0__["default"].forEach(doctor => {
      if (doctorNameResult == doctor.name) {
        doctor.listClinic.forEach(clinic => {
          if (doctorMetroResult == clinic.clinic) {
            jobTime = clinic.timeJob;
            clinic.timeJob.forEach(time => {
              dayJob.push(time.day.toLowerCase());
            });
          }
        });
      }
    });
    const itemData = document.querySelectorAll('.item__data');

    //добавляем классы активности и событие на айтемы с датой и запускаем функцию showTimeJob();
    itemData.forEach(day => {
      day.parentElement.style.opacity = '';
      day.parentElement.style.cursor = '';
      day.parentElement.classList.remove('item__point');
      dayJob.forEach(item => {
        if (day.innerText.indexOf(item) > 0) {
          day.parentElement.style.opacity = '1';
          day.parentElement.style.cursor = 'pointer';
          day.parentElement.classList.add('item__point');
          //вешаем события на дни приема

          day.parentElement.addEventListener('click', addEventDate);
        }
      });
    });
  }

  //добавляем событие на айтемы с датой и вызываем  функцию  showTimeJob()
  let clickByDateItem;
  function addEventDate() {
    document.querySelector('.screen__selection span').innerHTML = 'Выберите время приёма';
    choice.dateAtr = this.dataset;
    screnItemTime.forEach(item => {
      item.removeEventListener('click', addClassActiveByTime);
    });
    if (this.className == 'item__data' || this.className == 'item__month' || this.classList.contains('screen__item-third')) {
      clickByDateItem = this.innerText;
      choice.date = clickByDateItem;
    }
    ;
    document.querySelectorAll('.item__data').forEach(el => el.parentElement.classList.remove('item_third-active'));
    this.classList.add('item_third-active');
    showTimeJob(jobTime, clickByDateItem);
  }
  function showTimeJob(jobTime, clickByDateItem) {
    jobTime.forEach(time => {
      if (clickByDateItem.indexOf(time.day.toLowerCase()) > 0) {
        screnItemTime.forEach(item => {
          item.style.opacity = '';
          item.style.cursor = '';
          item.classList.remove('item__point');
          item.classList.remove('item_third-active');
        });
        time.time.forEach(itemTime => {
          screnItemTime.forEach(item => {
            if (item.innerText === itemTime) {
              item.style.opacity = '1';
              item.style.cursor = 'pointer';
              item.classList.add('item__point');
            }
          });
        });
      }
    });
    const itemPoint = document.querySelectorAll('.screen__wrapper-time .item__point');
    if (itemPoint) {
      itemPoint.forEach(item => {
        item.addEventListener('click', addClassActiveByTime);
      });
    }
  }
  function showСhoiceDateTime() {
    const screenSelection = document.querySelector('.screen__selection span');
    let date = new Date(choice.dateAtr.data);
    let dayWeek = date.toLocaleString("ru-ru", {
      weekday: 'long'
    });
    let month = date.toLocaleString("ru-ru", {
      month: 'short'
    });
    let dayMonth = date.getDate();
    screenSelection.innerHTML = `${dayMonth} ${month} (${dayWeek}), ${choice.time}`;
    showConfirmEntry();
  }
  ;

  //fourth-screen start

  //показывает результаты выбора для подтверждения
  function showConfirmEntry() {
    let childTrue = '';
    if (choice.children) {
      childTrue = ' - детский';
    }
    if (document.querySelector('.screen__info')) {
      document.querySelector('.screen__info').remove();
    }
    const appointmentFourthScr = document.querySelector('.appointment__fourth-scr .screen__btn-wrapper');
    let date = document.querySelector('.screen__selection span').innerHTML;
    let element = document.createElement('div');
    element.classList.add('screen__info');
    element.innerHTML = ``;
    element.innerHTML = `
            <div class="screen__info-subtitle">Вы записанны:  </div>
            <div class="screen__info-text">дата: <span>${date}</span></div>
            <div class="screen__info-text">специалист: <span>${choice.name} (${choice.specialization} ${childTrue})</span></div>
            <div class="screen__info-text">адрес клиники: <span>метро ${choice.metro}, ${choice.address}</span></div>
            <div class="screen__info-text">телефон: <span>+7(499) 689-252-69</span></div>
        `;
    element.classList.add('screen__info-last');
    appointmentFourthScr.before(element);
  }
  ;

  //вешаем событие на кнопки далее и назад

  const btnForWard = document.querySelectorAll('[data-btnForWard]');
  const btnBack = document.querySelectorAll('[data-btnBack]');
  const screen = document.querySelectorAll('.screen');
  btnForWard.forEach(btn => {
    btn.addEventListener('click', nextScreen);
  });
  btnBack.forEach(btn => {
    btn.addEventListener('click', previousScreen);
  });
  let count = 0;
  const message = ['специалиста', 'метро', 'дату и время', 'Заполните поле "Имя"', 'Заполните поле "Телефон"'];
  const screenFormInput = document.querySelectorAll('.screen__form-input input');
  screenFormInput[1].addEventListener('input', () => {
    screenFormInput[1].value = screenFormInput[1].value.replace(/\D/, "");
  });
  function nextScreen() {
    if (count == 4) {
      screen[4].classList.remove('screen_visible');
      screen[0].classList.add('screen_visible');
      choice.name = '';
      choice.specialization = '';
      choice.metro = '';
      choice.address = '';
      choice.date = '';
      choice.dateAtr = '';
      choice.time = '';
      choice.patientName = '';
      choice.patientPhone = '';
      screenFormInput[0].value = '';
      screenFormInput[1].value = '';
      count = 0;
      document.querySelectorAll('.choose-spec__title').forEach(item => {
        item.classList.remove('choose-spec__item_active');
      });
      return;
    }
    if (count == 3) {
      if (screenFormInput[0].value == '') {
        console.log('Заполните поле "Имя"');
        let elem = document.createElement('div');
        elem.classList.add('screen__message');
        elem.innerText = `Заполните поле "Имя"`;
        btnForWard[count].parentElement.after(elem);
        setTimeout(() => {
          elem.remove();
        }, 1500);
        return;
      }
      if (screenFormInput[1].value == '') {
        console.log('Заполните поле "Телефон"');
        let elem = document.createElement('div');
        elem.classList.add('screen__message');
        elem.innerText = 'Заполните поле "Телефон"';
        btnForWard[count].parentElement.after(elem);
        setTimeout(() => {
          elem.remove();
        }, 1500);
        return;
      }
      choice.patientName = screenFormInput[0].value;
      choice.patientPhone = screenFormInput[1].value;
    }
    if (count == 1) {
      //убераем события с активных дат по клику на имя
      document.querySelectorAll('.screen__item-third').forEach(item => {
        item.classList.remove('item__point', 'item_third-active');
        item.style.opacity = '';
        item.style.cursor = '';
        item.removeEventListener('click', addEventDate);
      });

      //убираем все стили активности с блоков время
      document.querySelectorAll('.screen__item-time').forEach(item => {
        item.removeEventListener('click', addClassActiveByTime);
        item.style.opacity = '';
        item.style.cursor = '';
        item.classList.remove('item__point', 'item_third-active');
      });
      const element = document.querySelectorAll('.screen__name-doctor');
      if (element.length == 1) {
        element[0].click();
      }
    }
    let a;
    switch (count) {
      case 0:
        a = choice.specialization;
        break;
      case 1:
        a = choice.metro;
        break;
      case 2:
        a = choice.time;
        break;
      default:
        break;
    }
    if (a == 0) {
      let elem = document.createElement('div');
      elem.classList.add('screen__message');
      elem.innerText = `Выберите ${message[count]}!`;
      btnForWard[count].parentElement.after(elem);
      setTimeout(() => {
        elem.remove();
      }, 1500);
      return;
    }
    screen.forEach(item => {
      item.classList.remove('screen_visible');
    });
    count++;
    screen[count].classList.add('screen_visible');
    metroActive();
  }
  function previousScreen() {
    if (count == 2) {
      //показываем только активные карточки с адресами

      const screenItem = document.querySelectorAll('.screen__item');
      screenItem.forEach(item => {
        item.style = '';
        let element = item.children[0].innerText.trim();
        metroVisible.forEach(metro => {
          if (metro.toLowerCase().trim() == element.toLowerCase()) {
            item.style.opacity = '1';
            item.style.cursor = 'pointer';
            item.addEventListener('click', addEventByCardMetro);
          }
        });
      });
    }
    screen.forEach(item => {
      item.classList.remove('screen_visible');
    });
    screen[count - 1].classList.add('screen_visible');
    count--;
  }
};
/* harmony default export */ __webpack_exports__["default"] = (appointment);

/***/ }),

/***/ "./src/js/modules/clinicsAddressesList.js":
/*!************************************************!*\
  !*** ./src/js/modules/clinicsAddressesList.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _db_hospitalAddressesDB__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../db/hospitalAddressesDB */ "./src/js/db/hospitalAddressesDB.js");

const clinicsAddressesList = () => {
  function showMetro() {
    const wrapperList = document.querySelector('.addresses-list');
    if (!wrapperList) {
      return;
    }
    _db_hospitalAddressesDB__WEBPACK_IMPORTED_MODULE_0__["hospitalAddresses"].forEach(item => {
      let elm = document.createElement('div');
      elm.classList.add('addresses-list__item');
      elm.innerHTML = `
                
                    <div class="screen__item-metro">
                        <img src="assets//img/metro-logo.svg" alt="">
                        <div class="screen__item-text">${item.metro}</div>
                    </div>
                    <p>Адрес:</p>
                    <div class="screen__item-address">${item.addresses}</div> 
                    <div class="screen__item-phone">+7(499) 658-963-25</div>
               
            `;
      wrapperList.append(elm);
    });
  }
  showMetro();
};
/* harmony default export */ __webpack_exports__["default"] = (clinicsAddressesList);

/***/ }),

/***/ "./src/js/modules/doctors.js":
/*!***********************************!*\
  !*** ./src/js/modules/doctors.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _db_doctorsDB__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../db/doctorsDB */ "./src/js/db/doctorsDB.js");
/* harmony import */ var _doctorsFilter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./doctorsFilter */ "./src/js/modules/doctorsFilter.js");




let doctorsAll = _db_doctorsDB__WEBPACK_IMPORTED_MODULE_0__["default"];
const searchWrapperResult = document.querySelector('.search__wrapper-result');
const doctors = () => {
  const radioBtn1 = document.querySelector('#radio_1');
  if (radioBtn1 !== null) {
    radioBtn1.checked = true;
  }

  //отрисовка всех карточек врачей на странице
  doctorsAll.forEach(doctor => {
    let cardDoctorMetro = document.createElement('div');
    cardDoctorMetro.classList.add('card-doctor__metro');
    let cardDoctor = document.createElement('div');
    cardDoctor.classList.add('card-doctor');
    cardDoctor.innerHTML = `
            <div class="card-doctor__photo"><img src=${doctor.photo} alt=""></div>
            <div class="card-doctor__specialty" data-children="${doctor.child}">Врач ${doctor.specialty}</div>
            <div class="card-doctor__name">${doctor.name}</div>
            <div class="card-doctor__price">стоимость приема  от ${doctor.cost} руб</div>
            <div class="card-doctor__clinics">Клиники:</div>
            <div></div>
            <div class="btn card-doctor__btn" href="forma-card.html">Расписание</div>
            
        `;
    searchWrapperResult.append(cardDoctor);
    doctor.listClinic.forEach(elem => {
      let item = document.createElement('div');
      item.classList.add('card-doctor__metro');
      item.innerHTML = `Метро ${elem.clinic}`;
      let card = cardDoctor.querySelector('.card-doctor__clinics');
      let quantityItem = cardDoctor.querySelectorAll('.card-doctor__metro').length;
      if (quantityItem <= 2) {
        card.after(item);
      } else {
        if (quantityItem == 3) {
          let el = cardDoctor.querySelector('.card-doctor__btn');
          item.innerHTML = `Метро .....`;
          el.before(item);
        }
      }
    });
  });
  const toggleFilter = document.querySelectorAll('.radio input');
  toggleFilter.forEach(btn => {
    btn.addEventListener('click', e => {
      if (e.target.id == 'radio_2') {
        let element = document.querySelectorAll('[data-children="false"]');
        element.forEach(elm => {
          if (elm.offsetParent !== null) {
            elm.offsetParent.style.display = 'none';
          }
        });
      } else {
        document.querySelectorAll('.card-doctor').forEach(elm => {
          elm.style.display = '';
        });
      }
    });
  });
  const cardDoctorBtn = document.querySelectorAll('.card-doctor__btn');
  cardDoctorBtn.forEach(btn => {
    btn.addEventListener('click', e => {
      let nameDoctor = e.target.parentElement.children[2].textContent;
      window.localStorage.setItem('nameDoctor', nameDoctor);
      window.location.href = 'forma-card.html';
    });
  });
};

//поиск по имени
const searchFilterBtn = document.querySelector('.search__filter-btn');
if (searchFilterBtn !== null) {
  searchFilterBtn.addEventListener('click', () => {
    document.querySelectorAll('.card-doctor').forEach(elem => elem.remove());
    let z = Object(_doctorsFilter__WEBPACK_IMPORTED_MODULE_1__["default"])();
    let elem = document.querySelector('.search__no-result');
    if (z.length == 0) {
      elem.textContent = 'По вашему запросу ничего не найдено.';
    } else {
      elem.textContent = '';
    }
    doctorsAll = z;
    doctors();
  });
}

//поиск по клинике
let requestMetro = document.querySelector("[name=clinics]");
if (requestMetro !== null) {
  requestMetro.addEventListener('change', () => {
    document.querySelectorAll('.card-doctor').forEach(elem => elem.remove());
    doctorsAll = [];
    let cvb = Object(_doctorsFilter__WEBPACK_IMPORTED_MODULE_1__["doctorsFilterMetro"])(requestMetro.value);
    doctorsAll = cvb;
    doctors();
    requestMetro.value = 'Все клиники';
  });
}

//поиск по специальности
let requestSpec = document.querySelector("[name=specialty]");
if (requestSpec !== null) {
  requestSpec.addEventListener('change', () => {
    showSelectionSpecialist(requestSpec.value);
  });
}

//вешаем событие клик на специалистов на главное странице
const listSpecialistsOnMain = document.querySelectorAll('.choose-spec__title a');
let itemByClick;

//повесили события
listSpecialistsOnMain.forEach(item => {
  item.addEventListener('click', e => {
    window.location.href = 'doctors.html';
    let text = e.target.innerText.replace('Дет. ', '');
    window.localStorage.setItem('spec', text.charAt(0).toUpperCase() + text.slice(1));
  });
});
if (!window.localStorage.getItem('spec') == '') {
  document.querySelectorAll('.card-doctor').forEach(elem => elem.remove());
  doctorsAll = [];
  let rgt = Object(_doctorsFilter__WEBPACK_IMPORTED_MODULE_1__["doctorsFilterSpec"])(window.localStorage.getItem('spec'));
  doctorsAll = rgt;
  requestSpec.value = 'Все специализации';
  window.localStorage.setItem('spec', '');
}

//показывает врачей по выбранной специальности
function showSelectionSpecialist(spec) {
  document.querySelectorAll('.card-doctor').forEach(elem => elem.remove());
  doctorsAll = [];
  let rgt = Object(_doctorsFilter__WEBPACK_IMPORTED_MODULE_1__["doctorsFilterSpec"])(spec);
  doctorsAll = rgt;
  doctors();
  requestSpec.value = 'Все специализации';
}
/* harmony default export */ __webpack_exports__["default"] = (doctors);

/***/ }),

/***/ "./src/js/modules/doctorsFilter.js":
/*!*****************************************!*\
  !*** ./src/js/modules/doctorsFilter.js ***!
  \*****************************************/
/*! exports provided: doctorsFilterSpec, doctorsFilterMetro, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "doctorsFilterSpec", function() { return doctorsFilterSpec; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "doctorsFilterMetro", function() { return doctorsFilterMetro; });
/* harmony import */ var _db_doctorsDB__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../db/doctorsDB */ "./src/js/db/doctorsDB.js");

const doctorsFilter = () => {
  const doctorsDB = _db_doctorsDB__WEBPACK_IMPORTED_MODULE_0__["default"];
  const searchFilterInputText = document.querySelector('.search__filter input');
  let resultSeach = [];
  let requestSearch;
  requestSearch = searchFilterInputText.value.toLowerCase();
  searchFilterInputText.value = '';
  doctorsDB.forEach(doctor => {
    if (doctor.name.toLowerCase().indexOf(requestSearch) === 0) {
      resultSeach.push(doctor);
    }
  });
  if (resultSeach.length === 0) {
    return resultSeach;
  } else {
    return resultSeach;
  }
};
const doctorsFilterMetro = value => {
  let resultSearchMetro = [];
  const doctorsDataMetro = _db_doctorsDB__WEBPACK_IMPORTED_MODULE_0__["default"];
  doctorsDataMetro.forEach(doctor => {
    doctor.listClinic.forEach(clinic => {
      if (clinic.clinic === value) {
        resultSearchMetro.push(doctor);
      }
    });
  });
  return resultSearchMetro;
};
const doctorsFilterSpec = valueSpec => {
  let resultSearchSpec = [];
  const doctorsDataSpec = _db_doctorsDB__WEBPACK_IMPORTED_MODULE_0__["default"];
  doctorsDataSpec.forEach(doctor => {
    if (doctor.specialty === valueSpec) {
      resultSearchSpec.push(doctor);
    }
  });
  return resultSearchSpec;
};


/* harmony default export */ __webpack_exports__["default"] = (doctorsFilter);

/***/ }),

/***/ "./src/js/modules/modal.js":
/*!*********************************!*\
  !*** ./src/js/modules/modal.js ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
const modal = () => {
  const btn = document.querySelector('.header__order-call');
  const modal = document.querySelector('.modal');
  const close = document.querySelector('.modal__wrapper-close');
  btn.addEventListener('click', () => {
    showModal();
  });
  close.addEventListener('click', () => {
    closeModal();
  });
  document.addEventListener('keydown', e => {
    if (e.key === 'Escape') {
      modal.style.display = '';
    }
  });
  function showModal() {
    modal.style.display = 'block';
    document.body.style.overflow = 'hidden';
    modal.addEventListener('click', e => {
      if (e.target.classList.contains('modal')) {
        closeModal();
      }
      ;
    });
  }
  function closeModal() {
    modal.style.display = '';
    document.body.style.overflow = '';
    modalInfo.classList.add('modal__info_hide');
    contForm.style.display = 'block';
  }

  //form
  const contForm = document.querySelector('.modal__form');
  const modalInfo = document.querySelector('.modal__info');
  const input = document.querySelectorAll('.modal__form input');
  const postDate = async (url, data) => {
    let res = await fetch(url, {
      method: "POST",
      body: data
    });
    return await res.text();
  };
  input.forEach((item, i) => {
    item.addEventListener('input', e => {
      if (input[i].name == 'phone') {
        let message = document.querySelector('.modal__notification');
        if (!/[0-9]/g.test(e.data)) {
          input[i].style.borderColor = 'red';
          message.style.display = 'block';
        } else {
          input[i].textContent = '';
          input[i].style.borderColor = '';
          message.style.display = '';
        }
        input[i].value = input[i].value.replace(/\D/, "");
      }
    });
  });
  const clearInputs = () => {
    input.forEach(item => {
      item.value = '';
    });
  };
  contForm.addEventListener('submit', e => {
    e.preventDefault();
    contForm.style.display = 'none';
    modalInfo.classList.remove('modal__info_hide');
    const formData = new FormData(contForm);
    postDate('server.php', formData).then(res => {}).catch(() => {
      let error = new Error();
      console.log(error.message);
    }).finally(() => {
      clearInputs();
      setTimeout(() => {
        closeModal();
      }, 5000);
    });
  });
};
/* harmony default export */ __webpack_exports__["default"] = (modal);

/***/ }),

/***/ "./src/js/modules/services.js":
/*!************************************!*\
  !*** ./src/js/modules/services.js ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _db_servicesPriceDB__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../db/servicesPriceDB */ "./src/js/db/servicesPriceDB.js");

const services = () => {
  const servicesMenu = document.querySelector('.services__menu');
  const servicesMenuItem = document.querySelectorAll('.services__menu-item');
  const servicesWrapper = document.querySelector('.services__wrapper');
  const servicesItemBtn = document.querySelector('.services__item-btn');
  try {
    showItem(_db_servicesPriceDB__WEBPACK_IMPORTED_MODULE_0__["servicesPriceDoctors"]);
    servicesMenu.addEventListener('click', e => {
      removeItem();
      let target = e.target;
      if (target && target.classList.contains("services__menu-item")) {
        servicesMenuItem.forEach(item => {
          item.classList.remove('services__menu_activ');
          target.classList.add('services__menu_activ');
        });
      }
      switch (target.id) {
        case "doctors":
          showItem(_db_servicesPriceDB__WEBPACK_IMPORTED_MODULE_0__["servicesPriceDoctors"]);
          break;
        case "test":
          showItem(_db_servicesPriceDB__WEBPACK_IMPORTED_MODULE_0__["servicesPriceTests"]);
          break;
        case "certificates":
          showItem(_db_servicesPriceDB__WEBPACK_IMPORTED_MODULE_0__["servicesPriceCertificates"]);
          break;
        case "diagnostics":
          showItem(_db_servicesPriceDB__WEBPACK_IMPORTED_MODULE_0__["servicesPriceDiagnostics"]);
          break;
        case "inspection":
          showItem(_db_servicesPriceDB__WEBPACK_IMPORTED_MODULE_0__["servicesPriceInspection"]);
          break;
      }
    });
    function showItem(servicesArry) {
      servicesArry.forEach((item, i) => {
        let elem = document.createElement('div');
        elem.classList.add('services__item');
        elem.innerHTML = `
                        <div class="services__item-logo"><img src="assets/img/services-logo.svg" alt=""></div>
                        <div class="services__item-title">${item[0]}</div>
                        <div class="services__item-price">от ${item[1]} руб.</div>
                        
                `;
        servicesWrapper.append(elem);
      });
    }
    ;
    function removeItem() {
      let elem = document.querySelectorAll('.services__item');
      elem.forEach(item => item.remove());
    }
    ;
  } catch (error) {}
};
/* harmony default export */ __webpack_exports__["default"] = (services);

/***/ }),

/***/ "./src/js/modules/slider.js":
/*!**********************************!*\
  !*** ./src/js/modules/slider.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
const slider = () => {
  try {
    const promoSlider = document.querySelector('.promo__slider');
    const slideWrapper = document.querySelector('.promo__slide-wrapper');
    const slideImg = document.querySelectorAll('.promo__slide-wrapper img');
    const widthContainer = document.querySelector('.container');
    const mediaQuery = window.matchMedia('(max-width: 1200px)');
    const mediaQuery992 = window.matchMedia('(max-width: 992px)');
    let move = widthContainer.clientWidth; //длина видимой части контейнера

    let width = widthContainer.clientWidth * slideImg.length;
    slideWrapper.style.width = `${width}px`;
    function changeWidth(widthCont) {
      let a;
      if (widthCont) {
        a = widthContainer.clientWidth * slideImg.length;
        slideWrapper.style.width = `${a}px`;
        width = a;
        move = 0;
      } else {
        a = widthContainer.clientWidth * slideImg.length;
        slideWrapper.style.width = `${a}px`;
        width = a;
        move = 0;
      }
    }
    mediaQuery.addEventListener('change', () => {
      changeWidth(mediaQuery.matches);
    });
    mediaQuery992.addEventListener('change', () => {
      changeWidth(mediaQuery992.matches);
    });
    function slideMove() {
      if (move < width) {
        slideWrapper.style.transform = `translateX(-${move}px)`;
        move = move + widthContainer.clientWidth;
      } else {
        move = 0;
      }
    }
    ;
    let pause;
    function moveInterval() {
      pause = setInterval(slideMove, 10000);
    }
    moveInterval();
    promoSlider.addEventListener('mouseenter', () => {
      clearInterval(pause);
    });
    promoSlider.addEventListener('mouseout', () => {
      moveInterval();
    });
  } catch (error) {}
};
/* harmony default export */ __webpack_exports__["default"] = (slider);

/***/ }),

/***/ "./src/js/modules/specialistsToggle.js":
/*!*********************************************!*\
  !*** ./src/js/modules/specialistsToggle.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
const specialistsToggle = () => {
  const toggleWrapper = document.querySelector('.toggle__wrapper');
  const toggleSubtitleLeft = document.querySelector('.toggle__subtitle-left');
  const toggleSubtitleRight = document.querySelector('.toggle__subtitle-right');
  toggleWrapper.addEventListener('click', () => {
    let elm = document.querySelector('.switch-btn');
    let wrapper = document.querySelectorAll('.choose-spec__wrapper');
    if (!toggleSubtitleRight) {
      return;
    }
    toggleSubtitleRight.classList.toggle('toggle__subtitle_activ');
    toggleSubtitleLeft.classList.toggle('toggle__subtitle_activ');
    if (elm.classList.contains('move-right')) {
      elm.classList.remove('move-right');
      wrapper[0].style.display = 'flex';
      wrapper[1].style.display = 'none';
    } else {
      elm.classList.add('move-right');
      wrapper[0].style.display = 'none';
      wrapper[1].style.display = 'flex';
    }
    ;
  });
};
/* harmony default export */ __webpack_exports__["default"] = (specialistsToggle);

/***/ }),

/***/ "./src/js/modules/workSchedule.js":
/*!****************************************!*\
  !*** ./src/js/modules/workSchedule.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _db_doctorsDB__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../db/doctorsDB */ "./src/js/db/doctorsDB.js");

const workSchedule = () => {
  const name = window.localStorage.getItem('nameDoctor');
  let doctorItem;
  _db_doctorsDB__WEBPACK_IMPORTED_MODULE_0__["default"].forEach(doctor => {
    if (doctor.name == name) {
      doctorItem = doctor;
    }
  });
  const schedulCard = document.querySelector('.schedule__card');
  schedulCard.querySelector('.schedule__card-specialty').textContent = `Врач ${doctorItem.specialty.toLowerCase()}`;
  schedulCard.querySelector('.schedule__card-photo img').setAttribute('src', doctorItem.photo);
  schedulCard.querySelector('.schedule__card-name').textContent = doctorItem.name;
  let priceItems = schedulCard.querySelectorAll('.schedule__card-price');
  priceItems[0].textContent = `Первичный прием ${+doctorItem.cost * 1.20} руб.`;
  priceItems[1].textContent = `Повторный прием ${doctorItem.cost} руб.`;
  const scheduleLocation = document.querySelector('.schedule__location');
  let scheduleReceptionSubtitle = document.querySelector('.schedule__reception-subtitle');
  doctorItem.listClinic.forEach(clinic => {
    let elm = document.createElement('div');
    elm.classList.add('schedule__location-item');
    elm.innerHTML = `
            <img src="assets//img/metro-logo.svg" alt="">
            <div class="schedule__location-metro ">${clinic.clinic}</div>
        `;
    scheduleLocation.append(elm);
  });
  scheduleReceptionSubtitle.textContent = `Дни приема: клиника "метро ${doctorItem.listClinic[0].clinic}"`;
  scheduleLocation.children[0].classList.add('schedule__location_activ');
  const scheduleReceptionWrapper = document.querySelector('.schedule__reception-wrapper');
  function setTomeJob(metro) {
    let weekday = ['Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб', 'Вс'];
    weekday.forEach(item => {
      let element = document.createElement('div');
      element.classList.add('schedule__reception-time');
      doctorItem.listClinic.forEach(address => {
        if (address.clinic == metro) {
          address.timeJob.forEach(day => {
            if (item == day.day) {
              element.innerHTML = `
                                        <div><span>${item}</span></div>
                                        <div>с ${day.time[0]}</div>
                                        <div>до ${day.time[day.time.length - 1]}</div>
                                    `;
            }
          });
        }
      });
      scheduleReceptionWrapper.append(element);
    });
  }
  setTomeJob(doctorItem.listClinic[0].clinic);
  scheduleLocation.addEventListener('click', e => {
    scheduleReceptionWrapper.innerHTML = '';
    let target = e.target;
    if (target.classList.contains("schedule__location-item") || target.parentElement.classList.contains("schedule__location-item")) {
      let metroText;
      if (target.localName == 'img') {
        metroText = target.parentElement.innerText;
      } else {
        metroText = target.innerText;
      }
      scheduleReceptionSubtitle.innerText = `Дни приема: клиника "метро ${metroText}"`;
      setTomeJob(metroText);
      let elem = document.querySelectorAll('.schedule__location-item');
      elem.forEach(item => {
        item.classList.remove('schedule__location_activ');
      });
      if (target.classList == 'schedule__location-item') {
        target.classList.add('schedule__location_activ');
      }
      if (target.parentElement.classList == 'schedule__location-item') {
        target.parentElement.classList.add('schedule__location_activ');
      }
    }
  });
};
/* harmony default export */ __webpack_exports__["default"] = (workSchedule);

/***/ })

/******/ });
//# sourceMappingURL=script.js.map